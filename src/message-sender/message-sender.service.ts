import { Injectable } from '@nestjs/common';
import { Cron } from '@nestjs/schedule';

import { TelegramService } from '../telegram/telegram.service';
import { MyshowsService } from '../myshows/myshows.service';
import { TjService } from '../tj/tj.service';
import { Show, TAllShows } from 'src/myshows/types';
import { NewsItem, TNewsDataItem } from 'src/tj/types';

@Injectable()
export class MessageSenderService {
  constructor(
    private readonly telegramService: TelegramService,
    private readonly myshowsService: MyshowsService,
    private readonly tjService: TjService,
  ) {}
  @Cron('2 00 * * *', {
    name: 'nightlyMessage',
    timeZone: 'Europe/Moscow',
  })
  public async sendNightlyMessage() {
    const chatId = process.env.TELEGRAM_CHAT_ID;
    this.telegramService.launch();
    const isNastyaBirthday = this.checkDate('May 6, 2023');
    if (isNastyaBirthday) {
      const titleMessage =
        '–î—Ä—É–∑—å—è, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–µ–≥–æ–¥–Ω—è —É –Ω–∞—à–µ–π –ù–∞—Å—Ç–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –∏ –º—ã –Ω–µ –º–æ–≥–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫!';
      const message = `<b>${titleMessage}</b>\n\n<b>–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –¥–Ω—è:</b>\n<b>1.</b> –ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ –º—É–∑—ã–∫–∞ - —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Å—Ç–µ–π –ù–∞—Å—Ç–∏, –∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ–∂–µ–ª–∞—Ç—å –µ–π, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ –º–µ–ª–æ–¥–∏–∏ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Å–≤–æ–∏–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º <a href="https://kish.su/wp-content/uploads/2019/08/gorshok-birthday.jpg">üîó</a>\n\n<b>2.</b> –ù–∞—Å—Ç—è —Ç–∞–∫–∂–µ –æ–±–æ–∂–∞–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è, –∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ–∂–µ–ª–∞—Ç—å –µ–π, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –µ–µ —Å–ª–µ–¥—É—é—â–∏–π –æ—Ç–¥—ã—Ö –±—ã–ª –ø–æ–ª–Ω—ã–º –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π! –ü—É—Å—Ç—å –æ–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ –∫–∞–∂–¥–æ–º –µ–≥–æ —É–≥–æ–ª–∫–µ <a href="https://s4-goods.ozstatic.by/2000/477/21/101/101021477_0.jpg">üîó</a>\n\n<b>3.</b> –ò, –∫–æ–Ω–µ—á–Ω–æ –∂–µ, –º—ã –Ω–µ –º–æ–∂–µ–º –∑–∞–±—ã—Ç—å –æ —Ç–æ–º, —á—Ç–æ –ù–∞—Å—Ç–µ –Ω—É–∂–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ. –ü–æ—ç—Ç–æ–º—É –º—ã –∂–µ–ª–∞–µ–º –µ–π –ø–æ–±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –≤—Å–µ–≥–¥–∞ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è –∑–¥–æ—Ä–æ–≤–æ–π, —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–π –∏ –≥–æ—Ç–æ–≤–æ–π –∫ –Ω–æ–≤—ã–º –ø–æ–¥–≤–∏–≥–∞–º <a href="https://telegraf.com.ua/static/storage/thumbs/700-*/8/a4/9c695bbd-494b504bb135be52d1c2076ad89b1a48.webp?v=5885_1">üîó</a>\n\n–° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ù–∞—Å—Ç—è! –ñ–µ–ª–∞–µ–º —Ç–µ–±–µ —Å—á–∞—Å—Ç—å—è, –ª—é–±–≤–∏, —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤ –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! üéâüéÇüéÅ`;

      return this.telegramService.sendMessage(message, chatId);
    }

    const showsPromise = this.myshowsService
      .getShowsWithAuth()
      .then((showsList: TAllShows) => {
        return this.myshowsService.getYesterdayShows(showsList);
      })
      .then((groupedShows: Show[] | undefined) => {
        return this.myshowsService.getShowsTextList(groupedShows);
      });

    const newsPromise = this.tjService
      .getLastNewsFromApi(25)
      .then((news: NewsItem[]) => {
        return this.tjService.getParsedNews(news, 3);
      })
      .then((newsParsed: TNewsDataItem[]) => {
        return this.tjService.getNewsTextList(newsParsed);
      });

    const [showsText, newsText] = await Promise.all([
      showsPromise,
      newsPromise,
    ]);

    const titleMessage = '–î–æ–±—Ä–æ–π –Ω–æ—á–∏, –¥—Ä—É–∑—å—è! –ê –≤–æ—Ç –∏ –∏—Ç–æ–≥–∏ –¥–Ω—è:';
    const message = `<b>${titleMessage}</b>\n\n<b>–°–µ—Ä–∏–∞–ª—ã:</b>\n${
      showsText || '–°–µ—Ä–∏–∞–ª—ã —Å–µ–≥–æ–¥–Ω—è –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ—Ç—Ä–µ–ª'
    }\n\n<b>–ë–∏–∑–Ω–µ—Å-–Ω–æ–≤–æ—Å—Ç–∏ –¥–Ω—è:</b>\n${newsText}\n\n–ù–∞ —ç—Ç–æ–º –≤—Å—ë, —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏!`;

    this.telegramService.sendMessage(message, chatId);
    this.telegramService.stop();
  }

  private checkDate(date: string) {
    const today = new Date();
    const targetDate = new Date(date);

    return today.toDateString() === targetDate.toDateString();
  }
}
